package Granja;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class Granja {
	public static final Double POLLOS = 1.5;
	public static final Double CERDOS = 4.5;

	private String localidad;
	private List<Animales> animal;
	
	public Granja(String localidad) {
		this.localidad = localidad;
		this.animal = new ArrayList<>();
	}

	public String getLocalidad() {
		return localidad;
	}

	public void setLocalidad(String localidad) {
		this.localidad = localidad;
	}
	
	public void addAnimal(Animales bipedo) {
		animal.add(bipedo);
	}
	public List<Animales> getAnimalesNacimiento(Integer año) {
		List<Animales> eseAño = new ArrayList<>(); 
		for (Animales animales : eseAño) {
			if(animales.getFecha_nacimiento().getYear() == año) {
				eseAño.add(animales);
			}
		}
		return eseAño;
	}
	public BigDecimal getPesoTotal() {
		BigDecimal total = new BigDecimal(0);
		for (Animales animales : animal) {
			total = total.add(animales.getPeso());
		}
		return total.setScale(2,RoundingMode.HALF_UP);
	}
	
	public BigDecimal getPrecioVenta() {
		BigDecimal totalPollos = new BigDecimal(0);
		BigDecimal totalCerdos = new BigDecimal(0);
		for (Animales animales : animal) {
			if(animales.tipo) {
			totalPollos = totalPollos.add(animales.getPeso());
			} else if (!animales.tipo) {
			totalCerdos = totalCerdos.add(animales.getPeso());
			}
		}
			Double ganancias = 0.0;
			Double pollosTotal = totalPollos.doubleValue();
			Double cerdosTotal = totalCerdos.doubleValue();
			pollosTotal = pollosTotal * POLLOS;
			cerdosTotal = cerdosTotal * CERDOS;
			ganancias = pollosTotal * cerdosTotal;
			BigDecimal ganancia = new BigDecimal(ganancias);
			return ganancia;
	}
	public void venderAnimales() {
		for (Animales animales : animal) {
			if(animales.sePuedeVender()) {
				animal.remove(animales);
			}
		}
	}
	
	
	
}
